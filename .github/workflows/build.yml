name: Build APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev ninja-build libgtk-3-dev
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Install Android Studio
        run: |
          sudo apt-get install -y wget unzip
          wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2023.1.1.26/android-studio-2023.1.1.26-linux.tar.gz
          sudo tar -xzf android-studio-2023.1.1.26-linux.tar.gz -C /usr/local/
          echo "export ANDROID_STUDIO_ROOT=/usr/local/android-studio" >> $GITHUB_ENV
          echo "export PATH=$PATH:/usr/local/android-studio/bin" >> $GITHUB_ENV
          
      - name: Setup Android SDK
        run: |
          # Set environment variables
          export ANDROID_HOME=/usr/local/lib/android/sdk
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
          
          # Download and install Command line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip
          
          # Create proper directory structure
          sudo mkdir -p $ANDROID_HOME/cmdline-tools
          sudo mv cmdline-tools $ANDROID_HOME/cmdline-tools/latest_temp
          sudo mv $ANDROID_HOME/cmdline-tools/latest_temp/* $ANDROID_HOME/cmdline-tools/
          sudo rm -rf $ANDROID_HOME/cmdline-tools/latest_temp
          
          # Install required SDK packages
          yes | sudo $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "cmdline-tools;latest"
          yes | sudo $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-33" "build-tools;33.0.0"
          
          # Accept licenses
          yes | sudo $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
          
          # Verify installation
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
          
      - name: Configure Flutter
        run: |
          flutter config --no-analytics
          flutter config --android-sdk /usr/local/lib/android/sdk
          flutter doctor -v
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flet flet-core
          
      - name: Debug Environment
        run: |
          echo "Python version:"
          python --version
          echo "Pip packages:"
          pip list
          echo "Flutter version:"
          flutter --version
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Source directory contents:"
          ls -la src/
          echo "Android Studio location:"
          echo $ANDROID_STUDIO_ROOT
          
      - name: Build APK with Debug
        run: |
          echo "Starting APK build..."
          cd simple-counter
          flet build apk --verbose --module-name src.main
          echo "Build complete"
          echo "Checking build output directory:"
          ls -R build/
        
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: simple-counter/build/app/outputs/flutter-apk/app-release.apk